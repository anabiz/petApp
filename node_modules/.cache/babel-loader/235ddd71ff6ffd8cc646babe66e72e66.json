{"ast":null,"code":"const faker = require(\"faker\");\n\nconst hash = require(\"object-hash\");\n\nconst animalsData = require(\"./animals\");\n\nlet random = (min, max) => Math.floor(Math.random() * (max - min) + min);\n\nconst AGES = [\"Baby\", \"Young\", \"Adult\", \"Senior\"];\nconst GENDERS = [\"Male\", \"Female\", \"Unknown\"];\nconst SIZES = [\"Small\", \"Medium\", \"Large\", null];\nconst COATS = [\"Short\", \"Medium\", \"Long\", null];\nconst ATTRIBUTES = [true, false, null];\nconst IMAGE_PROVIDERS = [\"http://placecorgi.com/\", \"http://placekitten.com/\", \"http://placebear.com/\"];\nconst STATUSES = [\"adoptable\", \"adopted\"];\n\nconst genOrg = () => {\n  const state = faker.address.stateAbbr();\n  const org = state + faker.random.number({\n    min: 100,\n    max: 999\n  });\n  return {\n    org,\n    state\n  };\n};\n\nconst photo = () => {\n  const img = IMAGE_PROVIDERS[faker.random.number({\n    min: 0,\n    max: IMAGE_PROVIDERS.length - 1\n  })];\n  return {\n    small: img + \"100/100\",\n    medium: img + \"300/300\",\n    large: img + \"600/600\",\n    full: img + \"800/800\"\n  };\n};\n\nconst animal = function animal(id = random(1000000, 9999999)) {\n  faker.seed(id);\n  const {\n    org,\n    state\n  } = genOrg();\n  const type = animalsData[id % animalsData.length];\n  return {\n    id,\n    name: faker.name.firstName(),\n    type,\n    species: type,\n    url: \"https://frontendmasters.com/?ref=pet\",\n    organization_id: org,\n    breeds: {\n      primary: faker.random.word(),\n      secondary: faker.random.boolean() ? faker.random.word() : null,\n      mixed: faker.random.boolean(),\n      unknown: faker.random.boolean()\n    },\n    colors: {\n      primary: faker.commerce.color(),\n      secondary: faker.commerce.color(),\n      tertiary: faker.random.boolean() ? faker.commerce.color() : null\n    },\n    age: AGES[faker.random.number({\n      min: 0,\n      max: AGES.length - 1\n    })],\n    gender: GENDERS[faker.random.number({\n      min: 0,\n      max: GENDERS.length - 1\n    })],\n    size: SIZES[faker.random.number({\n      min: 0,\n      max: SIZES.length - 1\n    })],\n    coat: COATS[faker.random.number({\n      min: 0,\n      max: COATS.length - 1\n    })],\n    attributes: {\n      spayed_neutered: ATTRIBUTES[faker.random.number({\n        min: 0,\n        max: ATTRIBUTES.length - 1\n      })],\n      house_trained: ATTRIBUTES[faker.random.number({\n        min: 0,\n        max: ATTRIBUTES.length - 1\n      })],\n      declawed: ATTRIBUTES[faker.random.number({\n        min: 0,\n        max: ATTRIBUTES.length - 1\n      })],\n      special_needs: ATTRIBUTES[faker.random.number({\n        min: 0,\n        max: ATTRIBUTES.length - 1\n      })],\n      shots_current: ATTRIBUTES[faker.random.number({\n        min: 0,\n        max: ATTRIBUTES.length - 1\n      })]\n    },\n    environment: {\n      children: ATTRIBUTES[faker.random.number({\n        min: 0,\n        max: ATTRIBUTES.length - 1\n      })],\n      dogs: ATTRIBUTES[faker.random.number({\n        min: 0,\n        max: ATTRIBUTES.length - 1\n      })],\n      cats: ATTRIBUTES[faker.random.number({\n        min: 0,\n        max: ATTRIBUTES.length - 1\n      })]\n    },\n    tags: [],\n    description: faker.lorem.text(10),\n    photos: Array.from({\n      length: faker.random.number({\n        min: 1,\n        max: 5\n      })\n    }).map(photo),\n    status: STATUSES[faker.random.number({\n      min: 0,\n      max: STATUSES.length - 1\n    })],\n    published_at: new Date(0).toISOString(),\n    contact: {\n      email: faker.internet.email(),\n      phone: faker.phone.phoneNumber(),\n      address: genAddress(state),\n      _links: {\n        self: {\n          href: \"/v2/animals/\" + id\n        },\n        organization: {\n          href: \"/v2/organizations/\" + org.toLowerCase()\n        },\n        type: {\n          href: \"/v2/types/\" + type\n        }\n      }\n    }\n  };\n};\n\nconst genAddress = state => ({\n  address1: faker.address.streetAddress(),\n  address2: faker.address.secondaryAddress(),\n  city: faker.address.city(),\n  state,\n  postcode: faker.address.zipCode(),\n  country: \"US\"\n});\n\nmodule.exports.animal = animal;\n\nconst animals = function animals(options) {\n  const seed = hash.sha1(options);\n  faker.seed(parseInt(seed, 16) % 9999999);\n  const pets = Array.from({\n    length: 20\n  }, () => faker.random.number({\n    min: 1000000,\n    max: 9999999\n  })).map(animal);\n  return pets;\n};\n\nmodule.exports.animals = animals;\n\nconst breeds = function breeds(type) {\n  const seed = hash.sha1(type);\n  faker.seed(parseInt(seed, 16) % 9999999);\n  const breedsRes = Array.from({\n    length: 20\n  }, () => {\n    const type = faker.random.word();\n    return {\n      name: type,\n      _links: {\n        type: {\n          href: \"/v2/type/\" + type\n        }\n      }\n    };\n  });\n  return breedsRes;\n};\n\nmodule.exports.breeds = breeds;\n\nconst organization = id => {\n  const seed = hash.sha1(id.toUpperCase());\n  faker.seed(parseInt(seed, 16) % 9999999);\n  const state = id.slice(0, 2).toUpperCase();\n  return {\n    id: id.toUpperCase(),\n    name: faker.company.companyName(),\n    email: faker.internet.email(),\n    phone: faker.phone.phoneNumber(),\n    address: genAddress(state),\n    hours: {\n      monday: null,\n      tuesday: null,\n      wednesday: null,\n      thursday: null,\n      friday: null,\n      saturday: null,\n      sunday: null\n    },\n    url: \"https://frontendmasters.com/?ref=pet\",\n    website: faker.internet.url(),\n    mission_state: faker.company.catchPhrase(),\n    adoption: {\n      policy: null,\n      url: null\n    },\n    social_media: {\n      facebook: \"https://www.facebook.com/FrontendMasters/\",\n      twitter: \"https://twitter.com/FrontendMasters/\",\n      youtube: \"https://www.youtube.com/channel/UCzumJvwc0KBrdq4jpvOR7RA\",\n      instagram: \"https://www.instagram.com/frontendmasters/\",\n      pinterest: null\n    },\n    photos: Array.from({\n      length: faker.random.number({\n        min: 1,\n        max: 5\n      })\n    }).map(photo),\n    _links: {\n      self: {\n        href: `/v2/organizations/${id.toLowerCase()}`\n      },\n      animals: {\n        href: `/v2/animals?organization=${id.toLowerCase()}`\n      }\n    }\n  };\n};\n\nmodule.exports.organization = organization;\n\nconst organizations = function organizations(options) {\n  const seed = hash.sha1(options);\n  faker.seed(parseInt(seed, 16) % 9999999);\n  const orgs = Array.from({\n    length: 20\n  }, () => genOrg().org).map(organization);\n  return orgs;\n};\n\nmodule.exports.organizations = organizations;\n\nconst typesRes = require(\"./mock-types\");\n\nmodule.exports.types = () => typesRes;\n\nfunction type(slug) {\n  const res = typesRes.filter(item => item.name.toLowerCase().replace(/&\\s/g, \"\").replace(/\\s/g, \"-\").replace(/,/g, \"\") === slug);\n\n  if (res.length) {\n    return res[0];\n  } else {\n    return typesRes[0];\n  }\n}\n\nmodule.exports.type = type;","map":{"version":3,"sources":["/Users/user/Desktop/adoptPet/node_modules/@frontendmasters/pet/data.js"],"names":["faker","require","hash","animalsData","random","min","max","Math","floor","AGES","GENDERS","SIZES","COATS","ATTRIBUTES","IMAGE_PROVIDERS","STATUSES","genOrg","state","address","stateAbbr","org","number","photo","img","length","small","medium","large","full","animal","id","seed","type","name","firstName","species","url","organization_id","breeds","primary","word","secondary","boolean","mixed","unknown","colors","commerce","color","tertiary","age","gender","size","coat","attributes","spayed_neutered","house_trained","declawed","special_needs","shots_current","environment","children","dogs","cats","tags","description","lorem","text","photos","Array","from","map","status","published_at","Date","toISOString","contact","email","internet","phone","phoneNumber","genAddress","_links","self","href","organization","toLowerCase","address1","streetAddress","address2","secondaryAddress","city","postcode","zipCode","country","module","exports","animals","options","sha1","parseInt","pets","breedsRes","toUpperCase","slice","company","companyName","hours","monday","tuesday","wednesday","thursday","friday","saturday","sunday","website","mission_state","catchPhrase","adoption","policy","social_media","facebook","twitter","youtube","instagram","pinterest","organizations","orgs","typesRes","types","slug","res","filter","item","replace"],"mappings":"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","sourcesContent":["const faker = require(\"faker\");\nconst hash = require(\"object-hash\");\nconst animalsData = require(\"./animals\");\n\nlet random = (min, max) => Math.floor(Math.random() * (max - min) + min);\n\nconst AGES = [\"Baby\", \"Young\", \"Adult\", \"Senior\"];\n\nconst GENDERS = [\"Male\", \"Female\", \"Unknown\"];\nconst SIZES = [\"Small\", \"Medium\", \"Large\", null];\nconst COATS = [\"Short\", \"Medium\", \"Long\", null];\nconst ATTRIBUTES = [true, false, null];\nconst IMAGE_PROVIDERS = [\n  \"http://placecorgi.com/\",\n  \"http://placekitten.com/\",\n  \"http://placebear.com/\"\n];\nconst STATUSES = [\"adoptable\", \"adopted\"];\n\nconst genOrg = () => {\n  const state = faker.address.stateAbbr();\n  const org = state + faker.random.number({ min: 100, max: 999 });\n\n  return { org, state };\n};\n\nconst photo = () => {\n  const img =\n    IMAGE_PROVIDERS[\n      faker.random.number({ min: 0, max: IMAGE_PROVIDERS.length - 1 })\n    ];\n  return {\n    small: img + \"100/100\",\n    medium: img + \"300/300\",\n    large: img + \"600/600\",\n    full: img + \"800/800\"\n  };\n};\n\nconst animal = function animal(id = random(1000000, 9999999)) {\n  faker.seed(id);\n  const { org, state } = genOrg();\n  const type = animalsData[id % animalsData.length];\n  return {\n    id,\n    name: faker.name.firstName(),\n    type,\n    species: type,\n    url: \"https://frontendmasters.com/?ref=pet\",\n    organization_id: org,\n    breeds: {\n      primary: faker.random.word(),\n      secondary: faker.random.boolean() ? faker.random.word() : null,\n      mixed: faker.random.boolean(),\n      unknown: faker.random.boolean()\n    },\n    colors: {\n      primary: faker.commerce.color(),\n      secondary: faker.commerce.color(),\n      tertiary: faker.random.boolean() ? faker.commerce.color() : null\n    },\n    age: AGES[faker.random.number({ min: 0, max: AGES.length - 1 })],\n    gender: GENDERS[faker.random.number({ min: 0, max: GENDERS.length - 1 })],\n    size: SIZES[faker.random.number({ min: 0, max: SIZES.length - 1 })],\n    coat: COATS[faker.random.number({ min: 0, max: COATS.length - 1 })],\n    attributes: {\n      spayed_neutered:\n        ATTRIBUTES[faker.random.number({ min: 0, max: ATTRIBUTES.length - 1 })],\n      house_trained:\n        ATTRIBUTES[faker.random.number({ min: 0, max: ATTRIBUTES.length - 1 })],\n      declawed:\n        ATTRIBUTES[faker.random.number({ min: 0, max: ATTRIBUTES.length - 1 })],\n      special_needs:\n        ATTRIBUTES[faker.random.number({ min: 0, max: ATTRIBUTES.length - 1 })],\n      shots_current:\n        ATTRIBUTES[faker.random.number({ min: 0, max: ATTRIBUTES.length - 1 })]\n    },\n    environment: {\n      children:\n        ATTRIBUTES[faker.random.number({ min: 0, max: ATTRIBUTES.length - 1 })],\n      dogs:\n        ATTRIBUTES[faker.random.number({ min: 0, max: ATTRIBUTES.length - 1 })],\n      cats:\n        ATTRIBUTES[faker.random.number({ min: 0, max: ATTRIBUTES.length - 1 })]\n    },\n    tags: [],\n    description: faker.lorem.text(10),\n    photos: Array.from({ length: faker.random.number({ min: 1, max: 5 }) }).map(\n      photo\n    ),\n    status: STATUSES[faker.random.number({ min: 0, max: STATUSES.length - 1 })],\n    published_at: new Date(0).toISOString(),\n    contact: {\n      email: faker.internet.email(),\n      phone: faker.phone.phoneNumber(),\n      address: genAddress(state),\n      _links: {\n        self: {\n          href: \"/v2/animals/\" + id\n        },\n        organization: {\n          href: \"/v2/organizations/\" + org.toLowerCase()\n        },\n        type: {\n          href: \"/v2/types/\" + type\n        }\n      }\n    }\n  };\n};\n\nconst genAddress = state => ({\n  address1: faker.address.streetAddress(),\n  address2: faker.address.secondaryAddress(),\n  city: faker.address.city(),\n  state,\n  postcode: faker.address.zipCode(),\n  country: \"US\"\n});\n\nmodule.exports.animal = animal;\n\nconst animals = function animals(options) {\n  const seed = hash.sha1(options);\n  faker.seed(parseInt(seed, 16) % 9999999);\n  const pets = Array.from({ length: 20 }, () =>\n    faker.random.number({ min: 1000000, max: 9999999 })\n  ).map(animal);\n\n  return pets;\n};\n\nmodule.exports.animals = animals;\n\nconst breeds = function breeds(type) {\n  const seed = hash.sha1(type);\n  faker.seed(parseInt(seed, 16) % 9999999);\n\n  const breedsRes = Array.from({ length: 20 }, () => {\n    const type = faker.random.word();\n\n    return {\n      name: type,\n      _links: {\n        type: {\n          href: \"/v2/type/\" + type\n        }\n      }\n    };\n  });\n\n  return breedsRes;\n};\n\nmodule.exports.breeds = breeds;\n\nconst organization = id => {\n  const seed = hash.sha1(id.toUpperCase());\n  faker.seed(parseInt(seed, 16) % 9999999);\n  const state = id.slice(0, 2).toUpperCase();\n\n  return {\n    id: id.toUpperCase(),\n    name: faker.company.companyName(),\n    email: faker.internet.email(),\n    phone: faker.phone.phoneNumber(),\n    address: genAddress(state),\n    hours: {\n      monday: null,\n      tuesday: null,\n      wednesday: null,\n      thursday: null,\n      friday: null,\n      saturday: null,\n      sunday: null\n    },\n    url: \"https://frontendmasters.com/?ref=pet\",\n    website: faker.internet.url(),\n    mission_state: faker.company.catchPhrase(),\n    adoption: {\n      policy: null,\n      url: null\n    },\n    social_media: {\n      facebook: \"https://www.facebook.com/FrontendMasters/\",\n      twitter: \"https://twitter.com/FrontendMasters/\",\n      youtube: \"https://www.youtube.com/channel/UCzumJvwc0KBrdq4jpvOR7RA\",\n      instagram: \"https://www.instagram.com/frontendmasters/\",\n      pinterest: null\n    },\n    photos: Array.from({ length: faker.random.number({ min: 1, max: 5 }) }).map(\n      photo\n    ),\n    _links: {\n      self: {\n        href: `/v2/organizations/${id.toLowerCase()}`\n      },\n      animals: {\n        href: `/v2/animals?organization=${id.toLowerCase()}`\n      }\n    }\n  };\n};\n\nmodule.exports.organization = organization;\n\nconst organizations = function organizations(options) {\n  const seed = hash.sha1(options);\n  faker.seed(parseInt(seed, 16) % 9999999);\n  const orgs = Array.from({ length: 20 }, () => genOrg().org).map(organization);\n\n  return orgs;\n};\n\nmodule.exports.organizations = organizations;\n\nconst typesRes = require(\"./mock-types\");\nmodule.exports.types = () => typesRes;\n\nfunction type(slug) {\n  const res = typesRes.filter(\n    item =>\n      item.name\n        .toLowerCase()\n        .replace(/&\\s/g, \"\")\n        .replace(/\\s/g, \"-\")\n        .replace(/,/g, \"\") === slug\n  );\n  if (res.length) {\n    return res[0];\n  } else {\n    return typesRes[0];\n  }\n}\n\nmodule.exports.type = type;\n"]},"metadata":{},"sourceType":"script"}