{"ast":null,"code":"const axios = require(\"axios\");\n\nconst BASE = \"http://pets.dev-apis.com/\";\n\nconst success = ({\n  data\n}) => data;\n\nconst fail = err => {\n  switch (err.status) {\n    case 400:\n      console.error(\"API error: invalid parameters. Probably means you provided some sort of invalid character to the API or that you' not providing something it is expecting.\");\n      break;\n\n    case 401:\n      console.error(\"API error: insufficeint credentials. Probably means that petfinder shut down this API endpoint, means this client won't work anymore :(\");\n      break;\n\n    case 403:\n      console.error(\"API error: insufficient access. Not sure how you saw this since none of this should have privileged access. Probably means the endpoint is broken and there's nothing you can do :(\");\n      break;\n\n    case 404:\n      console.error(\"API error: endpoint not found. This probably means Brian broke the endpoint. Could you tweet at @holtbt on Twitter to let him know his shit is broken?\");\n      break;\n  }\n\n  return err;\n};\n\nconst makeRequest = (path, params = {}) => axios.get(`${BASE}${path}`, {\n  params\n}).then(success, fail);\n\nmodule.exports = {\n  animals(params) {\n    return makeRequest(\"animals\", params);\n  },\n\n  animal(id) {\n    return makeRequest(`animals/${id}`);\n  },\n\n  types() {\n    return makeRequest(\"types\");\n  },\n\n  type(type) {\n    return makeRequest(`types/${type}`);\n  },\n\n  breeds(type) {\n    return makeRequest(`types/${type}/breeds`);\n  },\n\n  organizations(params) {\n    return makeRequest(\"organizations\", params);\n  },\n\n  organization(id) {\n    return makeRequest(`organizations/${id}`);\n  },\n\n  requestLink(link, params) {\n    let url = link;\n\n    if (link.startsWith(\"/v2/\")) {\n      url = link.replace(\"/v2/\", \"\");\n    }\n\n    return makeRequest(url, params);\n  }\n\n};","map":{"version":3,"sources":["/Users/user/Desktop/adoptPet/node_modules/@frontendmasters/pet/impl.js"],"names":["axios","require","BASE","success","data","fail","err","status","console","error","makeRequest","path","params","get","then","module","exports","animals","animal","id","types","type","breeds","organizations","organization","requestLink","link","url","startsWith","replace"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,IAAI,GAAG,2BAAb;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAcA,IAA9B;;AACA,MAAMC,IAAI,GAAGC,GAAG,IAAI;AAClB,UAAQA,GAAG,CAACC,MAAZ;AACE,SAAK,GAAL;AACEC,MAAAA,OAAO,CAACC,KAAR,CACE,4JADF;AAGA;;AACF,SAAK,GAAL;AACED,MAAAA,OAAO,CAACC,KAAR,CACE,yIADF;AAGA;;AACF,SAAK,GAAL;AACED,MAAAA,OAAO,CAACC,KAAR,CACE,qLADF;AAGA;;AACF,SAAK,GAAL;AACED,MAAAA,OAAO,CAACC,KAAR,CACE,wJADF;AAGA;AApBJ;;AAuBA,SAAOH,GAAP;AACD,CAzBD;;AA2BA,MAAMI,WAAW,GAAG,CAACC,IAAD,EAAOC,MAAM,GAAG,EAAhB,KAClBZ,KAAK,CACFa,GADH,CACQ,GAAEX,IAAK,GAAES,IAAK,EADtB,EACyB;AACrBC,EAAAA;AADqB,CADzB,EAIGE,IAJH,CAIQX,OAJR,EAIiBE,IAJjB,CADF;;AAOAU,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,OAAO,CAACL,MAAD,EAAS;AACd,WAAOF,WAAW,CAAC,SAAD,EAAYE,MAAZ,CAAlB;AACD,GAHc;;AAIfM,EAAAA,MAAM,CAACC,EAAD,EAAK;AACT,WAAOT,WAAW,CAAE,WAAUS,EAAG,EAAf,CAAlB;AACD,GANc;;AAOfC,EAAAA,KAAK,GAAG;AACN,WAAOV,WAAW,CAAC,OAAD,CAAlB;AACD,GATc;;AAUfW,EAAAA,IAAI,CAACA,IAAD,EAAO;AACT,WAAOX,WAAW,CAAE,SAAQW,IAAK,EAAf,CAAlB;AACD,GAZc;;AAafC,EAAAA,MAAM,CAACD,IAAD,EAAO;AACX,WAAOX,WAAW,CAAE,SAAQW,IAAK,SAAf,CAAlB;AACD,GAfc;;AAgBfE,EAAAA,aAAa,CAACX,MAAD,EAAS;AACpB,WAAOF,WAAW,CAAC,eAAD,EAAkBE,MAAlB,CAAlB;AACD,GAlBc;;AAmBfY,EAAAA,YAAY,CAACL,EAAD,EAAK;AACf,WAAOT,WAAW,CAAE,iBAAgBS,EAAG,EAArB,CAAlB;AACD,GArBc;;AAsBfM,EAAAA,WAAW,CAACC,IAAD,EAAOd,MAAP,EAAe;AACxB,QAAIe,GAAG,GAAGD,IAAV;;AACA,QAAIA,IAAI,CAACE,UAAL,CAAgB,MAAhB,CAAJ,EAA6B;AAC3BD,MAAAA,GAAG,GAAGD,IAAI,CAACG,OAAL,CAAa,MAAb,EAAqB,EAArB,CAAN;AACD;;AAED,WAAOnB,WAAW,CAACiB,GAAD,EAAMf,MAAN,CAAlB;AACD;;AA7Bc,CAAjB","sourcesContent":["const axios = require(\"axios\");\n\nconst BASE = \"http://pets.dev-apis.com/\";\n\nconst success = ({ data }) => data;\nconst fail = err => {\n  switch (err.status) {\n    case 400:\n      console.error(\n        \"API error: invalid parameters. Probably means you provided some sort of invalid character to the API or that you' not providing something it is expecting.\"\n      );\n      break;\n    case 401:\n      console.error(\n        \"API error: insufficeint credentials. Probably means that petfinder shut down this API endpoint, means this client won't work anymore :(\"\n      );\n      break;\n    case 403:\n      console.error(\n        \"API error: insufficient access. Not sure how you saw this since none of this should have privileged access. Probably means the endpoint is broken and there's nothing you can do :(\"\n      );\n      break;\n    case 404:\n      console.error(\n        \"API error: endpoint not found. This probably means Brian broke the endpoint. Could you tweet at @holtbt on Twitter to let him know his shit is broken?\"\n      );\n      break;\n  }\n\n  return err;\n};\n\nconst makeRequest = (path, params = {}) =>\n  axios\n    .get(`${BASE}${path}`, {\n      params\n    })\n    .then(success, fail);\n\nmodule.exports = {\n  animals(params) {\n    return makeRequest(\"animals\", params);\n  },\n  animal(id) {\n    return makeRequest(`animals/${id}`);\n  },\n  types() {\n    return makeRequest(\"types\");\n  },\n  type(type) {\n    return makeRequest(`types/${type}`);\n  },\n  breeds(type) {\n    return makeRequest(`types/${type}/breeds`);\n  },\n  organizations(params) {\n    return makeRequest(\"organizations\", params);\n  },\n  organization(id) {\n    return makeRequest(`organizations/${id}`);\n  },\n  requestLink(link, params) {\n    let url = link;\n    if (link.startsWith(\"/v2/\")) {\n      url = link.replace(\"/v2/\", \"\");\n    }\n\n    return makeRequest(url, params);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}